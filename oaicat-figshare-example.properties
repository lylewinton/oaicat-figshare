# OAICat Configuration

# This paramter is optional. Comment it out if you want the code to get the baseURL
# from the request instead. Setting it here is only necessary if your firewall messes
# with the request in a way that alters the baseURL from your expectations.
# OAIHandler.baseURL=http://localhost:8080/oaicat/OAIHandler

# Uncomment this line if you want to include an XSL stylesheet reference
# in the OAI response so they can be rendered into HTML by browsers.
OAIHandler.styleSheet=/oaicat/oaicat.xsl

# Uncomment this line if you want OAICat to render the responses into HTML on the server using
# OAIHandler.stylesheet when the request comes from an old browser.
#OAIHandler.renderForOldBrowsers=true

AbstractCatalog.oaiCatalogClassName=net.datanoid.oaipmh.figshare.FigshareOAICatalog
AbstractCatalog.recordFactoryClassName=net.datanoid.oaipmh.figshare.JSONRecordFactory
AbstractCatalog.secondsToLive=3600

# Choose one of the following two
#AbstractCatalog.granularity=YYYY-MM-DD
AbstractCatalog.granularity=YYYY-MM-DDThh:mm:ssZ

# Change to include properties peculiar to your implementation of AbstractCatalog
#FigshareOAICatalog.maxListSize=10
FigshareOAICatalog.searchFilter=:institution: melbourne AND :group: Zoology

JSONRecordFactory.repositoryIdentifier=figshare.com

# Custom Identify response values
Identify.repositoryName=Custom Figshare Repository
Identify.adminEmail=mailto:digital-stewardship@unimelb.edu.au
Identify.earliestDatestamp=2014-01-01T00:00:00Z
Identify.deletedRecord=no

# This is the old way to specify <description><oai-identifier> for the Identify verb
#Identify.repositoryIdentifier=figshare.com
#Identify.sampleIdentifier=oai:figshare.com:article/9643055

# This is the new way to specify <description> elements in general for the Identify verb
# Append something unique like .1, .2, etc to 'Identify.description' for each occurrence
#Identify.description.1=<description><oai-identifier xmlns=\"http://www.openarchives.org/OAI/2.0/oai-identifier\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai-identifier http://www.openarchives.org/OAI/2.0/oai-identifier.xsd\"><scheme>oai</scheme><repositoryIdentifier>oaicat.oclc.org</repositoryIdentifier><delimiter>:</delimiter><sampleIdentifier>oai:oaicat.oclc.org:OCLCNo/ocm00000012</sampleIdentifier></oai-identifier></description>
Identify.description.1=<description><oai-identifier xmlns=\"http://www.openarchives.org/OAI/2.0/oai-identifier\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai-identifier http://www.openarchives.org/OAI/2.0/oai-identifier.xsd\"><scheme>oai</scheme><repositoryIdentifier>figshare.com</repositoryIdentifier><delimiter>:</delimiter><sampleIdentifier>oai:figshare.com:article/9643055</sampleIdentifier></oai-identifier></description>

# List the supported metadataPrefixes along with the class that performs the associated crosswalk (only DC is supported)
Crosswalks.oai_dc=net.datanoid.oaipmh.figshare.JSON2oai_dc

# Files will be output in corresponding format (filename=%NAME%, link=%VALUE%, md5=%VALUE2%)
JSON2oai_dc.filesFormat=<dcterms:hasPart rdf:resource="%VALUE_ATTRIB%">%NAME_CDATA%</dcterms:hasPart><dcterms:hasPart xsi:type="dcterms:URI" rdf:resource="%VALUE_ATTRIB%">%VALUE_CDATA%</dcterms:hasPart>
# Any custom_fields matching a Regex will be output in the corresponding Format.
# For each field only the first match is used, so order is important.
# Property names must end with consecutive number starting from 1.
JSON2oai_dc.customFields.Regex.1=(?i)principal\\s+contact\\s+name.*
JSON2oai_dc.customFields.Format.1=<dc:description.contactname>%VALUE_CDATA%</dc:description.contactname>
JSON2oai_dc.customFields.Regex.2=.*
JSON2oai_dc.customFields.Format.2=<dc:description.%NAME_ELEMENT%>%VALUE_CDATA%</dc:description.%NAME_ELEMENT%>
# Format replaces %NAME% %VALUE% %NAME_ELEMENT% (suitable for element names)
#  %NAME_CDATA% %VALUE_CDATA% (suitable for text/cdata)
#  %NAME_ATTRIB% %VALUE_ATTRIB% (suitable for attributes within quotes)
# Add attributes to the <DC> element, eg. XMLNS for custom field formats above
#JSON2oai_dc.dcElementAddAttributes=xmlns:foaf="http://xmlns.com/foaf/0.1/"
